aws elbv2 create-load-balancer --name Lab4-ELB --type application --scheme internet-facing --subnets subnet-42599e29 subnet-78502434
aws ec2 create-security-group --group-name Lab4-ELB-SG --description ALB-SG
aws ec2 authorize-security-group-ingress --group-id sg-0e9691d1298a4b787 --protocol tcp --port 80 --cidr 0.0.0.0/0
aws ec2 authorize-security-group-ingress --group-id sg-0e9691d1298a4b787 --protocol tcp --port 22 --cidr 0.0.0.0/0
aws elbv2 set-security-groups --load-balancer-arn arn:aws:elasticloadbalancing:us-east-2:[account-id]:loadbalancer/app/Lab4-ELB/1843a0075bdbb50c --security-groups sg-0e9691d1298a4b787
aws ec2 run-instances --image-id ami-0a89646f76803f341 --count 2 --instance-type t2.micro --key-name MyNewKeypair --associate-public-ip-address --security-group-ids sg-0e9691d1298a4b787
aws elbv2 create-target-group --name Lab4-Target-Group --target-type instance --protocol HTTP --port 80 --vpc-id vpc-7b7cd310
aws elbv2 register-targets --target-group-arn arn:aws:elasticloadbalancing:us-east-2:[account-id]:targetgroup/Lab4-Target-Group/ae85907c4ffc5b65 --targets Id=i-0aaec202464609838 Id=i-055b386bf33abdec0
aws elbv2 create-listener --load-balancer-arn arn:aws:elasticloadbalancing:us-east-2:[account-id]:loadbalancer/app/Lab4-ELB/1843a0075bdbb50c --protocol HTTP --port 80 --default-actions Type=forward,TargetGroupArn=arn:aws:elasticloadbalancing:us-east-2:[account-id]:targetgroup/Lab4-Target-Group/ae85907c4ffc5b65

--Auto Scaling
aws autoscaling create-auto-scaling-group --auto-scaling-group-name Lab4-AG --launch-template LaunchTemplateId=lt-070e65558a16d6543 --min-size 2 --max-size 2 --desired-capacity 2 --vpc-zone-identifier subnet-78502434 --target-group-arns arn:aws:elasticloadbalancing:us-east-2:[account-id]:targetgroup/Lab4-Target-Group/ae85907c4ffc5b58